services:
  invidious:
    container_name: invidious
    build:
      context: ${INVIDIOUS_BUILD_CONTEXT}
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    #ports:
    #  - 3000:3000
    expose:
      - 3000
    environment:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        signature_server: inv_sig_helper:12999
        visitor_data: "${VISITOR_DATA}"
        po_token: "${PO_TOKEN}"
        captcha_enabled: false
        popular_enabled: true
        statistics_enabled: true
        admins: ["adam"]
        channel_threads: 2
        external_port: 443
        domain: ${DOMAIN}
        https_only: true
        hmac_key: "${HMAC_KEY}"
        default_user_preferences:
          region: ${REGION}
          dark_mode: "dark"
          feed_menu: ["Popular", "Trending", "Subscriptions", "Playlists"]
          default_home: Subscriptions
          player_style: youtube
          quality: dash
          quality_dash: 1080p
          save_player_pos: true
          sort: published
          automatic_instance_redirect: false
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    depends_on:
      - invidious-db
    networks:
        - media-tier

  inv_sig_helper:
    container_name: invidious_sig_helper
    image: quay.io/invidious/inv-sig-helper:latest
    init: true
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true
    networks:
        - media-tier

  invidious-db:
    container_name: invidious_db
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - root_postgresdatainvid:/var/lib/postgresql/data
      - ${DOCKER_VOLUME_STORAGE}/invidious/config/sql:/config/sql
      - ${DOCKER_VOLUME_STORAGE}/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    networks:
        - media-tier

volumes:
  root_postgresdatainvid:
    external: true # Invidious DB

